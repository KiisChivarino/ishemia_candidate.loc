# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'ru'
    app_locales: ar|cs|da|de|en|eo|es|eu|fi|fr|it|ja|nl|pl|pt_BR|ru|sk|sv|tr|zh_CN

imports:
    - { resource: globals.yaml }
    - { resource: services/roles.yaml }
    - { resource: services/template/content.yaml }
    - { resource: services/notifications/email_notification_service.yml }
    - { resource: services/notifications/sms_notification_service.yml }
    - { resource: services/notifications/notification_channel_types.yaml }
    - { resource: services/notifications/notification_receiver_types.yaml }
    - { resource: constant/case.yaml }
    - { resource: services/user_data.yaml }
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $rootPath : '%kernel.project_dir%'
            $projectInfo: '%project_info%'
            $emailParameters: '%email_notification_service.email_parameters%'
            $smsParameters: '%sms_notification_service.sms_parameters%'
            $smsStatuses: '%sms_notification_service.sms_statuses%'
            $smsUpdateTimes: '%sms_notification_service.sms_update_times%'
            $phoneParameters: '%sms_notification_service.phone_parameters%'
            $timeFormats: '%sms_notification_service.time_formats%'
            $systemUserPhone: '%system_user_phone%'
            $defaultTimeFormats: '%default_time_formats%'
            $channelTypes: '%channel_types%'
            $notificationReceiverTypeNames: '%notification_receiver_type_names%'
            $notificationReceiverTypeTitles: '%notification_receiver_type_titles%'
            $userData: '%user_data%'
            $caseType: '%caseType%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'
            - '../src/Repository/AppRepository.php'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    app.menu_builder:
        class: App\AppBundle\Menu\MenuBuilder
        arguments: ["@knp_menu.factory"]

    app.main_menu:
        class: Knp\Menu\MenuItem # the service definition requires setting the class
        factory: ["@app.menu_builder", createMainMenu]
        arguments: ["@request_stack"]
        tags:
            - { name: knp_menu.menu, alias: main}
    app.doctor_office_header_menu:
        class: Knp\Menu\MenuItem # the service definition requires setting the class
        factory: ["@app.menu_builder", createDoctorOfficeHeaderMenu]
        arguments: ["@request_stack"]
        tags:
            - { name: knp_menu.menu, alias: doctorOfficeHeader}
    app.admin_header_menu:
        class: Knp\Menu\MenuItem # the service definition requires setting the class
        factory: [ "@app.menu_builder", createAdminHeaderMenu ]
        arguments: [ "@request_stack" ]
        tags:
            - { name: knp_menu.menu, alias: adminHeader }
    app.doctor_office_sidebar_menu:
        class: Knp\Menu\MenuItem # the service definition requires setting the class
        factory: ["@app.menu_builder", createDoctorOfficeSidebarMenu]
        arguments: ["@request_stack"]
        tags:
            - { name: knp_menu.menu, alias: doctorOfficeSidebar}
    App\Form\AuthUser\AuthUserRoleType:
        arguments: ['@doctrine.orm.entity_manager']
        tags: [form.type]