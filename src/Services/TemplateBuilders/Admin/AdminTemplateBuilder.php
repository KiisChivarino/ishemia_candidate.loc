<?php

namespace App\Services\TemplateBuilders\Admin;

use App\Services\FilterService\FilterService;
use App\Services\TemplateBuilders\AppTemplateBuilder;
use App\Services\TemplateItems\DeleteTemplateItem;
use App\Services\TemplateItems\EditTemplateItem;
use Exception;
use Symfony\Component\Routing\RouteCollection;

/**
 * Class AdminTemplateBuilder
 *
 * @package App\Services\TemplateBuilders
 */
abstract class AdminTemplateBuilder extends AppTemplateBuilder
{
    /** @var string Default redirect route name */
    public const DEFAULT_REDIRECT_ROUTE_NAME = 'show';

    /** @var string Путь к общим шаблонам crud админки */
    public const DEFAULT_COMMON_TEMPLATE_PATH = 'admin/common_template/';

    /**
     * CountryTemplate constructor.
     *
     * @param RouteCollection $routeCollection
     * @param string $className
     * @throws Exception
     */
    public function __construct(RouteCollection $routeCollection, string $className)
    {
        parent::__construct(
            $routeCollection,
            $className,
            self::DEFAULT_COMMON_TEMPLATE_PATH,
            self::DEFAULT_REDIRECT_ROUTE_NAME
        );
    }

    /**
     * @param FilterService|null $filterService
     * @param array|null $itemsWithRoutes
     * @return AppTemplateBuilder
     * @throws Exception
     */
    public function list(?FilterService $filterService = null, ?array $itemsWithRoutes = null): AppTemplateBuilder
    {
        parent::list($filterService);

        $this->getItem('show')->getTemplateItemRoute()
            ->setRouteName($this->getRoute('show'));
        $this->getItem('edit')->getTemplateItemRoute()
            ->setRouteName($this->getRoute('edit'));
        $this->getItem('delete')->getTemplateItemRoute()
            ->setRouteName($this->getRoute('delete'));
        return $this;
    }

    /**
     * @param object|null $entity
     * @return AppTemplateBuilder
     */
    public function show(?object $entity = null): AppTemplateBuilder
    {
        parent::show($entity); // TODO: Change the autogenerated stub

        if ($this->isMethodGetIdExists($entity)) {
            $this->getItem(EditTemplateItem::TEMPLATE_ITEM_EDIT_NAME)
                ->getTemplateItemRoute()->setRouteParams(['id'=>$entity->getId()]);
            $this->getItem(DeleteTemplateItem::TEMPLATE_ITEM_DELETE_NAME)
                ->getTemplateItemRoute()->setRouteParams(['id' => $entity->getId()]);
        }

        return $this;
    }
}